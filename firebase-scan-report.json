{
  "timestamp": "2025-07-20T13:51:17.656Z",
  "summary": {
    "totalFiles": 93,
    "filesWithFirebase": 18,
    "affectedPercentage": "19.4"
  },
  "statistics": {
    "byFileType": {
      ".tsx": {
        "count": 13,
        "files": [
          "src\\app\\admin\\dashboard\\merchants\\page.tsx",
          "src\\app\\admin\\dashboard\\qrcodes\\page.tsx",
          "src\\app\\cart\\page.tsx",
          "src\\app\\checkout\\page.tsx",
          "src\\app\\favorites\\page.tsx",
          "src\\app\\merchant\\dashboard\\menu\\page.tsx",
          "src\\app\\merchant\\dashboard\\promotions\\page.tsx",
          "src\\app\\merchant\\dashboard\\settings\\page.tsx",
          "src\\app\\restaurants\\page.tsx",
          "src\\app\\restaurants\\[restaurantId]\\page.tsx",
          "src\\contexts\\auth-context.tsx",
          "src\\contexts\\favorites-context.tsx",
          "src\\contexts\\order-context.tsx"
        ]
      },
      ".ts": {
        "count": 5,
        "files": [
          "src\\lib\\adapters\\database-adapter.ts",
          "src\\lib\\adapters\\index.ts",
          "src\\lib\\adapters\\realtime-adapter.ts",
          "src\\lib\\adapters\\test-suite.ts",
          "src\\lib\\database.ts"
        ]
      }
    },
    "byPattern": {
      "firebase/firestore": {
        "count": 13,
        "files": [
          "src\\app\\admin\\dashboard\\merchants\\page.tsx",
          "src\\app\\admin\\dashboard\\qrcodes\\page.tsx",
          "src\\app\\cart\\page.tsx",
          "src\\app\\checkout\\page.tsx",
          "src\\app\\favorites\\page.tsx",
          "src\\app\\merchant\\dashboard\\menu\\page.tsx",
          "src\\app\\merchant\\dashboard\\promotions\\page.tsx",
          "src\\app\\merchant\\dashboard\\settings\\page.tsx",
          "src\\app\\restaurants\\page.tsx",
          "src\\app\\restaurants\\[restaurantId]\\page.tsx",
          "src\\contexts\\favorites-context.tsx",
          "src\\contexts\\order-context.tsx",
          "src\\lib\\database.ts"
        ]
      },
      "from.*firebase": {
        "count": 28,
        "files": [
          "src\\app\\admin\\dashboard\\merchants\\page.tsx",
          "src\\app\\admin\\dashboard\\qrcodes\\page.tsx",
          "src\\app\\cart\\page.tsx",
          "src\\app\\checkout\\page.tsx",
          "src\\app\\favorites\\page.tsx",
          "src\\app\\merchant\\dashboard\\menu\\page.tsx",
          "src\\app\\merchant\\dashboard\\promotions\\page.tsx",
          "src\\app\\merchant\\dashboard\\settings\\page.tsx",
          "src\\app\\restaurants\\page.tsx",
          "src\\app\\restaurants\\[restaurantId]\\page.tsx",
          "src\\contexts\\favorites-context.tsx",
          "src\\contexts\\order-context.tsx",
          "src\\lib\\database.ts"
        ]
      },
      "import.*firebase": {
        "count": 26,
        "files": [
          "src\\app\\admin\\dashboard\\merchants\\page.tsx",
          "src\\app\\admin\\dashboard\\qrcodes\\page.tsx",
          "src\\app\\cart\\page.tsx",
          "src\\app\\checkout\\page.tsx",
          "src\\app\\favorites\\page.tsx",
          "src\\app\\merchant\\dashboard\\menu\\page.tsx",
          "src\\app\\merchant\\dashboard\\promotions\\page.tsx",
          "src\\app\\merchant\\dashboard\\settings\\page.tsx",
          "src\\app\\restaurants\\page.tsx",
          "src\\app\\restaurants\\[restaurantId]\\page.tsx",
          "src\\contexts\\favorites-context.tsx",
          "src\\contexts\\order-context.tsx",
          "src\\lib\\database.ts"
        ]
      },
      "@/lib/firebase": {
        "count": 12,
        "files": [
          "src\\app\\admin\\dashboard\\merchants\\page.tsx",
          "src\\app\\admin\\dashboard\\qrcodes\\page.tsx",
          "src\\app\\cart\\page.tsx",
          "src\\app\\checkout\\page.tsx",
          "src\\app\\favorites\\page.tsx",
          "src\\app\\merchant\\dashboard\\menu\\page.tsx",
          "src\\app\\merchant\\dashboard\\promotions\\page.tsx",
          "src\\app\\merchant\\dashboard\\settings\\page.tsx",
          "src\\app\\restaurants\\page.tsx",
          "src\\app\\restaurants\\[restaurantId]\\page.tsx",
          "src\\contexts\\favorites-context.tsx",
          "src\\contexts\\order-context.tsx"
        ]
      },
      "collection\\(": {
        "count": 23,
        "files": [
          "src\\app\\admin\\dashboard\\merchants\\page.tsx",
          "src\\app\\admin\\dashboard\\qrcodes\\page.tsx",
          "src\\app\\restaurants\\page.tsx",
          "src\\contexts\\favorites-context.tsx",
          "src\\contexts\\order-context.tsx",
          "src\\lib\\adapters\\database-adapter.ts",
          "src\\lib\\adapters\\realtime-adapter.ts",
          "src\\lib\\adapters\\test-suite.ts"
        ]
      },
      "doc\\(": {
        "count": 49,
        "files": [
          "src\\app\\admin\\dashboard\\merchants\\page.tsx",
          "src\\app\\admin\\dashboard\\qrcodes\\page.tsx",
          "src\\app\\cart\\page.tsx",
          "src\\app\\checkout\\page.tsx",
          "src\\app\\favorites\\page.tsx",
          "src\\app\\merchant\\dashboard\\menu\\page.tsx",
          "src\\app\\merchant\\dashboard\\promotions\\page.tsx",
          "src\\app\\merchant\\dashboard\\settings\\page.tsx",
          "src\\app\\restaurants\\[restaurantId]\\page.tsx",
          "src\\contexts\\auth-context.tsx",
          "src\\contexts\\favorites-context.tsx",
          "src\\contexts\\order-context.tsx",
          "src\\lib\\adapters\\database-adapter.ts",
          "src\\lib\\adapters\\test-suite.ts"
        ]
      },
      "getDocs\\(": {
        "count": 5,
        "files": [
          "src\\app\\admin\\dashboard\\merchants\\page.tsx",
          "src\\app\\admin\\dashboard\\qrcodes\\page.tsx",
          "src\\app\\restaurants\\page.tsx",
          "src\\contexts\\favorites-context.tsx",
          "src\\contexts\\order-context.tsx"
        ]
      },
      "updateDoc\\(": {
        "count": 11,
        "files": [
          "src\\app\\admin\\dashboard\\merchants\\page.tsx",
          "src\\app\\admin\\dashboard\\qrcodes\\page.tsx",
          "src\\app\\merchant\\dashboard\\menu\\page.tsx",
          "src\\app\\merchant\\dashboard\\promotions\\page.tsx",
          "src\\app\\merchant\\dashboard\\settings\\page.tsx",
          "src\\contexts\\order-context.tsx"
        ]
      },
      "query\\(": {
        "count": 16,
        "files": [
          "src\\app\\admin\\dashboard\\merchants\\page.tsx",
          "src\\app\\admin\\dashboard\\qrcodes\\page.tsx",
          "src\\app\\restaurants\\page.tsx",
          "src\\contexts\\favorites-context.tsx",
          "src\\contexts\\order-context.tsx",
          "src\\lib\\adapters\\database-adapter.ts"
        ]
      },
      "orderBy\\(": {
        "count": 10,
        "files": [
          "src\\app\\admin\\dashboard\\merchants\\page.tsx",
          "src\\app\\admin\\dashboard\\qrcodes\\page.tsx",
          "src\\contexts\\favorites-context.tsx",
          "src\\contexts\\order-context.tsx",
          "src\\lib\\adapters\\database-adapter.ts",
          "src\\lib\\adapters\\test-suite.ts"
        ]
      },
      "addDoc\\(": {
        "count": 2,
        "files": [
          "src\\app\\admin\\dashboard\\qrcodes\\page.tsx",
          "src\\contexts\\order-context.tsx"
        ]
      },
      "serverTimestamp\\(": {
        "count": 4,
        "files": [
          "src\\app\\admin\\dashboard\\qrcodes\\page.tsx",
          "src\\contexts\\order-context.tsx"
        ]
      },
      "writeBatch\\(": {
        "count": 1,
        "files": [
          "src\\app\\admin\\dashboard\\qrcodes\\page.tsx"
        ]
      },
      "getDoc\\(": {
        "count": 8,
        "files": [
          "src\\app\\cart\\page.tsx",
          "src\\app\\checkout\\page.tsx",
          "src\\app\\favorites\\page.tsx",
          "src\\app\\merchant\\dashboard\\menu\\page.tsx",
          "src\\app\\merchant\\dashboard\\promotions\\page.tsx",
          "src\\app\\merchant\\dashboard\\settings\\page.tsx",
          "src\\app\\restaurants\\[restaurantId]\\page.tsx",
          "src\\contexts\\order-context.tsx"
        ]
      },
      "arrayUnion\\(": {
        "count": 1,
        "files": [
          "src\\app\\merchant\\dashboard\\menu\\page.tsx"
        ]
      },
      "arrayRemove\\(": {
        "count": 1,
        "files": [
          "src\\app\\merchant\\dashboard\\menu\\page.tsx"
        ]
      },
      "where\\(": {
        "count": 6,
        "files": [
          "src\\app\\restaurants\\page.tsx",
          "src\\lib\\adapters\\database-adapter.ts",
          "src\\lib\\adapters\\test-suite.ts"
        ]
      },
      "setDoc\\(": {
        "count": 2,
        "files": [
          "src\\contexts\\auth-context.tsx",
          "src\\contexts\\favorites-context.tsx"
        ]
      },
      "deleteDoc\\(": {
        "count": 1,
        "files": [
          "src\\contexts\\favorites-context.tsx"
        ]
      },
      "Timestamp\\.": {
        "count": 3,
        "files": [
          "src\\contexts\\favorites-context.tsx",
          "src\\contexts\\order-context.tsx"
        ]
      },
      "onSnapshot\\(": {
        "count": 10,
        "files": [
          "src\\contexts\\order-context.tsx",
          "src\\lib\\adapters\\database-adapter.ts",
          "src\\lib\\adapters\\index.ts",
          "src\\lib\\adapters\\realtime-adapter.ts",
          "src\\lib\\adapters\\test-suite.ts"
        ]
      },
      "firebase/auth": {
        "count": 1,
        "files": [
          "src\\lib\\database.ts"
        ]
      },
      "firebase/storage": {
        "count": 1,
        "files": [
          "src\\lib\\database.ts"
        ]
      },
      "firebase/app": {
        "count": 1,
        "files": [
          "src\\lib\\database.ts"
        ]
      }
    },
    "mostAffectedFiles": [
      {
        "file": "src\\lib\\adapters\\database-adapter.ts",
        "patterns": [
          {
            "pattern": "collection\\(",
            "matches": 4,
            "examples": [
              "collection(",
              "collection(",
              "collection("
            ]
          },
          {
            "pattern": "doc\\(",
            "matches": 3,
            "examples": [
              "doc(",
              "doc(",
              "doc("
            ]
          },
          {
            "pattern": "onSnapshot\\(",
            "matches": 3,
            "examples": [
              "onSnapshot(",
              "onSnapshot(",
              "onSnapshot("
            ]
          },
          {
            "pattern": "query\\(",
            "matches": 10,
            "examples": [
              "Query(",
              "Query(",
              "Query("
            ]
          },
          {
            "pattern": "orderBy\\(",
            "matches": 4,
            "examples": [
              "orderBy(",
              "orderBy(",
              "orderBy("
            ]
          },
          {
            "pattern": "where\\(",
            "matches": 4,
            "examples": [
              "where(",
              "where(",
              "where("
            ]
          }
        ],
        "lines": [
          {
            "lineNumber": 205,
            "content": "where(field: string, operator: string, value: any): Query {",
            "pattern": "where\\("
          },
          {
            "lineNumber": 237,
            "content": "return new Query(this.collection, newFilter, this.sortOptions, this.limitCount, this.offsetCount);",
            "pattern": "query\\("
          },
          {
            "lineNumber": 240,
            "content": "orderBy(field: string, direction: 'asc' | 'desc' = 'asc'): Query {",
            "pattern": "orderBy\\("
          },
          {
            "lineNumber": 245,
            "content": "return new Query(this.collection, this.filter, newSortOptions, this.limitCount, this.offsetCount);",
            "pattern": "query\\("
          },
          {
            "lineNumber": 249,
            "content": "return new Query(this.collection, this.filter, this.sortOptions, limit, this.offsetCount);",
            "pattern": "query\\("
          },
          {
            "lineNumber": 253,
            "content": "return new Query(this.collection, this.filter, this.sortOptions, this.limitCount, offset);",
            "pattern": "query\\("
          },
          {
            "lineNumber": 285,
            "content": "onSnapshot(",
            "pattern": "onSnapshot\\("
          },
          {
            "lineNumber": 330,
            "content": "doc(docId?: string): DocumentReference {",
            "pattern": "doc\\("
          },
          {
            "lineNumber": 358,
            "content": "where(field: string, operator: string, value: any): Query {",
            "pattern": "where\\("
          },
          {
            "lineNumber": 359,
            "content": "return new Query(this.collection).where(field, operator, value);",
            "pattern": "query\\("
          },
          {
            "lineNumber": 359,
            "content": "return new Query(this.collection).where(field, operator, value);",
            "pattern": "where\\("
          },
          {
            "lineNumber": 362,
            "content": "orderBy(field: string, direction: 'asc' | 'desc' = 'asc'): Query {",
            "pattern": "orderBy\\("
          },
          {
            "lineNumber": 363,
            "content": "return new Query(this.collection).orderBy(field, direction);",
            "pattern": "query\\("
          },
          {
            "lineNumber": 363,
            "content": "return new Query(this.collection).orderBy(field, direction);",
            "pattern": "orderBy\\("
          },
          {
            "lineNumber": 367,
            "content": "return new Query(this.collection).limit(limit);",
            "pattern": "query\\("
          },
          {
            "lineNumber": 371,
            "content": "return new Query(this.collection).get();",
            "pattern": "query\\("
          },
          {
            "lineNumber": 374,
            "content": "onSnapshot(",
            "pattern": "onSnapshot\\("
          },
          {
            "lineNumber": 378,
            "content": "return new Query(this.collection).onSnapshot(onNext, onError);",
            "pattern": "onSnapshot\\("
          },
          {
            "lineNumber": 378,
            "content": "return new Query(this.collection).onSnapshot(onNext, onError);",
            "pattern": "query\\("
          },
          {
            "lineNumber": 412,
            "content": "collection(name: string): CollectionReference {",
            "pattern": "collection\\("
          },
          {
            "lineNumber": 413,
            "content": "return new CollectionReference(this.db.collection(name));",
            "pattern": "collection\\("
          },
          {
            "lineNumber": 416,
            "content": "doc(path: string): DocumentReference {",
            "pattern": "doc\\("
          },
          {
            "lineNumber": 423,
            "content": "return new DocumentReference(this.db.collection(collectionName), docId);",
            "pattern": "collection\\("
          },
          {
            "lineNumber": 429,
            "content": "return db.collection(name);",
            "pattern": "collection\\("
          },
          {
            "lineNumber": 433,
            "content": "return db.doc(path);",
            "pattern": "doc\\("
          },
          {
            "lineNumber": 440,
            "content": "let currentQuery = new Query((collection as any).collection);",
            "pattern": "query\\("
          },
          {
            "lineNumber": 444,
            "content": "currentQuery = currentQuery.where(constraint.field, constraint.operator, constraint.value);",
            "pattern": "where\\("
          },
          {
            "lineNumber": 446,
            "content": "currentQuery = currentQuery.orderBy(constraint.field, constraint.direction);",
            "pattern": "orderBy\\("
          }
        ],
        "totalLines": 507,
        "firebaseLineCount": 28
      },
      {
        "file": "src\\contexts\\order-context.tsx",
        "patterns": [
          {
            "pattern": "firebase/firestore",
            "matches": 1,
            "examples": [
              "firebase/firestore"
            ]
          },
          {
            "pattern": "from.*firebase",
            "matches": 2,
            "examples": [
              "from '@/lib/firebase",
              "from 'firebase"
            ]
          },
          {
            "pattern": "import.*firebase",
            "matches": 1,
            "examples": [
              "import { db } from '@/lib/firebase"
            ]
          },
          {
            "pattern": "@/lib/firebase",
            "matches": 1,
            "examples": [
              "@/lib/firebase"
            ]
          },
          {
            "pattern": "collection\\(",
            "matches": 3,
            "examples": [
              "collection(",
              "collection(",
              "collection("
            ]
          },
          {
            "pattern": "doc\\(",
            "matches": 6,
            "examples": [
              "Doc(",
              "Doc(",
              "doc("
            ]
          },
          {
            "pattern": "getDoc\\(",
            "matches": 1,
            "examples": [
              "getDoc("
            ]
          },
          {
            "pattern": "getDocs\\(",
            "matches": 1,
            "examples": [
              "getDocs("
            ]
          },
          {
            "pattern": "addDoc\\(",
            "matches": 1,
            "examples": [
              "addDoc("
            ]
          },
          {
            "pattern": "updateDoc\\(",
            "matches": 2,
            "examples": [
              "updateDoc(",
              "updateDoc("
            ]
          },
          {
            "pattern": "onSnapshot\\(",
            "matches": 1,
            "examples": [
              "onSnapshot("
            ]
          },
          {
            "pattern": "serverTimestamp\\(",
            "matches": 1,
            "examples": [
              "serverTimestamp("
            ]
          },
          {
            "pattern": "Timestamp\\.",
            "matches": 2,
            "examples": [
              "Timestamp.",
              "Timestamp."
            ]
          },
          {
            "pattern": "query\\(",
            "matches": 2,
            "examples": [
              "query(",
              "query("
            ]
          },
          {
            "pattern": "orderBy\\(",
            "matches": 2,
            "examples": [
              "orderBy(",
              "orderBy("
            ]
          }
        ],
        "lines": [
          {
            "lineNumber": 7,
            "content": "import { db } from '@/lib/firebase';",
            "pattern": "from.*firebase"
          },
          {
            "lineNumber": 7,
            "content": "import { db } from '@/lib/firebase';",
            "pattern": "import.*firebase"
          },
          {
            "lineNumber": 7,
            "content": "import { db } from '@/lib/firebase';",
            "pattern": "@/lib/firebase"
          },
          {
            "lineNumber": 21,
            "content": "} from 'firebase/firestore';",
            "pattern": "firebase/firestore"
          },
          {
            "lineNumber": 21,
            "content": "} from 'firebase/firestore';",
            "pattern": "from.*firebase"
          },
          {
            "lineNumber": 58,
            "content": "const ordersCollectionRef = collection(db, \"orders\");",
            "pattern": "collection\\("
          },
          {
            "lineNumber": 59,
            "content": "const q = query(ordersCollectionRef, orderBy(\"orderDate\", \"desc\"));",
            "pattern": "query\\("
          },
          {
            "lineNumber": 59,
            "content": "const q = query(ordersCollectionRef, orderBy(\"orderDate\", \"desc\"));",
            "pattern": "orderBy\\("
          },
          {
            "lineNumber": 60,
            "content": "const querySnapshot = await getDocs(q);",
            "pattern": "getDocs\\("
          },
          {
            "lineNumber": 98,
            "content": "const ordersCollectionRef = collection(db, \"orders\");",
            "pattern": "collection\\("
          },
          {
            "lineNumber": 99,
            "content": "const q = query(ordersCollectionRef, orderBy(\"orderDate\", \"desc\"));",
            "pattern": "query\\("
          },
          {
            "lineNumber": 99,
            "content": "const q = query(ordersCollectionRef, orderBy(\"orderDate\", \"desc\"));",
            "pattern": "orderBy\\("
          },
          {
            "lineNumber": 101,
            "content": "const unsubscribe = onSnapshot(q, (querySnapshot) => {",
            "pattern": "onSnapshot\\("
          },
          {
            "lineNumber": 146,
            "content": "const ordersCollectionRef = collection(db, \"orders\");",
            "pattern": "collection\\("
          },
          {
            "lineNumber": 159,
            "content": "orderDate: serverTimestamp(),",
            "pattern": "serverTimestamp\\("
          },
          {
            "lineNumber": 164,
            "content": "docDataWithTimestamp.appliedPromotion = orderData.appliedPromotion;",
            "pattern": "Timestamp\\."
          },
          {
            "lineNumber": 167,
            "content": "docDataWithTimestamp.discountAmount = orderData.discountAmount;",
            "pattern": "Timestamp\\."
          },
          {
            "lineNumber": 171,
            "content": "const docRef = await addDoc(ordersCollectionRef, docDataWithTimestamp);",
            "pattern": "doc\\("
          },
          {
            "lineNumber": 171,
            "content": "const docRef = await addDoc(ordersCollectionRef, docDataWithTimestamp);",
            "pattern": "addDoc\\("
          },
          {
            "lineNumber": 172,
            "content": "const newDocSnap = await getDoc(docRef);",
            "pattern": "doc\\("
          },
          {
            "lineNumber": 172,
            "content": "const newDocSnap = await getDoc(docRef);",
            "pattern": "getDoc\\("
          },
          {
            "lineNumber": 217,
            "content": "const orderRef = doc(db, \"orders\", orderId);",
            "pattern": "doc\\("
          },
          {
            "lineNumber": 218,
            "content": "await updateDoc(orderRef, { status });",
            "pattern": "doc\\("
          },
          {
            "lineNumber": 218,
            "content": "await updateDoc(orderRef, { status });",
            "pattern": "updateDoc\\("
          },
          {
            "lineNumber": 236,
            "content": "const orderRef = doc(db, \"orders\", orderId);",
            "pattern": "doc\\("
          },
          {
            "lineNumber": 237,
            "content": "await updateDoc(orderRef, { rating });",
            "pattern": "doc\\("
          },
          {
            "lineNumber": 237,
            "content": "await updateDoc(orderRef, { rating });",
            "pattern": "updateDoc\\("
          }
        ],
        "totalLines": 273,
        "firebaseLineCount": 27
      },
      {
        "file": "src\\app\\admin\\dashboard\\qrcodes\\page.tsx",
        "patterns": [
          {
            "pattern": "firebase/firestore",
            "matches": 1,
            "examples": [
              "firebase/firestore"
            ]
          },
          {
            "pattern": "from.*firebase",
            "matches": 2,
            "examples": [
              "from \"@/lib/firebase",
              "from \"firebase"
            ]
          },
          {
            "pattern": "import.*firebase",
            "matches": 2,
            "examples": [
              "import { db } from \"@/lib/firebase",
              "import { collection, addDoc, getDocs, serverTimestamp, doc, updateDoc, query, orderBy as firestoreOrderBy, writeBatch } from \"firebase"
            ]
          },
          {
            "pattern": "@/lib/firebase",
            "matches": 1,
            "examples": [
              "@/lib/firebase"
            ]
          },
          {
            "pattern": "collection\\(",
            "matches": 3,
            "examples": [
              "collection(",
              "collection(",
              "collection("
            ]
          },
          {
            "pattern": "doc\\(",
            "matches": 6,
            "examples": [
              "doc(",
              "Doc(",
              "Doc("
            ]
          },
          {
            "pattern": "getDocs\\(",
            "matches": 1,
            "examples": [
              "getDocs("
            ]
          },
          {
            "pattern": "addDoc\\(",
            "matches": 1,
            "examples": [
              "addDoc("
            ]
          },
          {
            "pattern": "updateDoc\\(",
            "matches": 2,
            "examples": [
              "updateDoc(",
              "updateDoc("
            ]
          },
          {
            "pattern": "serverTimestamp\\(",
            "matches": 3,
            "examples": [
              "serverTimestamp(",
              "serverTimestamp(",
              "serverTimestamp("
            ]
          },
          {
            "pattern": "query\\(",
            "matches": 1,
            "examples": [
              "query("
            ]
          },
          {
            "pattern": "orderBy\\(",
            "matches": 1,
            "examples": [
              "OrderBy("
            ]
          },
          {
            "pattern": "writeBatch\\(",
            "matches": 1,
            "examples": [
              "writeBatch("
            ]
          }
        ],
        "lines": [
          {
            "lineNumber": 17,
            "content": "import { db } from \"@/lib/firebase\";",
            "pattern": "from.*firebase"
          },
          {
            "lineNumber": 17,
            "content": "import { db } from \"@/lib/firebase\";",
            "pattern": "import.*firebase"
          },
          {
            "lineNumber": 17,
            "content": "import { db } from \"@/lib/firebase\";",
            "pattern": "@/lib/firebase"
          },
          {
            "lineNumber": 20,
            "content": "import { collection, addDoc, getDocs, serverTimestamp, doc, updateDoc, query, orderBy as firestoreOrderBy, writeBatch } from \"firebase/firestore\";",
            "pattern": "firebase/firestore"
          },
          {
            "lineNumber": 20,
            "content": "import { collection, addDoc, getDocs, serverTimestamp, doc, updateDoc, query, orderBy as firestoreOrderBy, writeBatch } from \"firebase/firestore\";",
            "pattern": "from.*firebase"
          },
          {
            "lineNumber": 20,
            "content": "import { collection, addDoc, getDocs, serverTimestamp, doc, updateDoc, query, orderBy as firestoreOrderBy, writeBatch } from \"firebase/firestore\";",
            "pattern": "import.*firebase"
          },
          {
            "lineNumber": 105,
            "content": "const q = query(collection(db, \"bed-qrcodes\"), firestoreOrderBy(\"createdAt\", \"desc\"));",
            "pattern": "collection\\("
          },
          {
            "lineNumber": 105,
            "content": "const q = query(collection(db, \"bed-qrcodes\"), firestoreOrderBy(\"createdAt\", \"desc\"));",
            "pattern": "query\\("
          },
          {
            "lineNumber": 105,
            "content": "const q = query(collection(db, \"bed-qrcodes\"), firestoreOrderBy(\"createdAt\", \"desc\"));",
            "pattern": "orderBy\\("
          },
          {
            "lineNumber": 106,
            "content": "const querySnapshot = await getDocs(q);",
            "pattern": "getDocs\\("
          },
          {
            "lineNumber": 144,
            "content": "const qrRef = doc(db, \"bed-qrcodes\", editingQrCode.id);",
            "pattern": "doc\\("
          },
          {
            "lineNumber": 145,
            "content": "await updateDoc(qrRef, { ...qrDataPayload, lastUpdatedAt: serverTimestamp() });",
            "pattern": "doc\\("
          },
          {
            "lineNumber": 145,
            "content": "await updateDoc(qrRef, { ...qrDataPayload, lastUpdatedAt: serverTimestamp() });",
            "pattern": "updateDoc\\("
          },
          {
            "lineNumber": 145,
            "content": "await updateDoc(qrRef, { ...qrDataPayload, lastUpdatedAt: serverTimestamp() });",
            "pattern": "serverTimestamp\\("
          },
          {
            "lineNumber": 148,
            "content": "await addDoc(collection(db, \"bed-qrcodes\"), {",
            "pattern": "collection\\("
          },
          {
            "lineNumber": 148,
            "content": "await addDoc(collection(db, \"bed-qrcodes\"), {",
            "pattern": "doc\\("
          },
          {
            "lineNumber": 148,
            "content": "await addDoc(collection(db, \"bed-qrcodes\"), {",
            "pattern": "addDoc\\("
          },
          {
            "lineNumber": 151,
            "content": "createdAt: serverTimestamp(),",
            "pattern": "serverTimestamp\\("
          },
          {
            "lineNumber": 169,
            "content": "const batch = writeBatch(db);",
            "pattern": "writeBatch\\("
          },
          {
            "lineNumber": 170,
            "content": "const qrCodesCollectionRef = collection(db, \"bed-qrcodes\");",
            "pattern": "collection\\("
          },
          {
            "lineNumber": 191,
            "content": "const newQrDocRef = doc(qrCodesCollectionRef); // Auto-generate ID",
            "pattern": "doc\\("
          },
          {
            "lineNumber": 199,
            "content": "createdAt: serverTimestamp(),",
            "pattern": "serverTimestamp\\("
          },
          {
            "lineNumber": 228,
            "content": "const qrRef = doc(db, \"bed-qrcodes\", qr.id);",
            "pattern": "doc\\("
          },
          {
            "lineNumber": 229,
            "content": "await updateDoc(qrRef, {isActive: !qr.isActive});",
            "pattern": "doc\\("
          },
          {
            "lineNumber": 229,
            "content": "await updateDoc(qrRef, {isActive: !qr.isActive});",
            "pattern": "updateDoc\\("
          }
        ],
        "totalLines": 513,
        "firebaseLineCount": 25
      },
      {
        "file": "src\\app\\merchant\\dashboard\\menu\\page.tsx",
        "patterns": [
          {
            "pattern": "firebase/firestore",
            "matches": 1,
            "examples": [
              "firebase/firestore"
            ]
          },
          {
            "pattern": "from.*firebase",
            "matches": 2,
            "examples": [
              "from '@/lib/firebase",
              "from 'firebase"
            ]
          },
          {
            "pattern": "import.*firebase",
            "matches": 2,
            "examples": [
              "import { db } from '@/lib/firebase",
              "import { doc, getDoc, updateDoc, arrayUnion, arrayRemove } from 'firebase"
            ]
          },
          {
            "pattern": "@/lib/firebase",
            "matches": 1,
            "examples": [
              "@/lib/firebase"
            ]
          },
          {
            "pattern": "doc\\(",
            "matches": 9,
            "examples": [
              "doc(",
              "Doc(",
              "doc("
            ]
          },
          {
            "pattern": "getDoc\\(",
            "matches": 1,
            "examples": [
              "getDoc("
            ]
          },
          {
            "pattern": "updateDoc\\(",
            "matches": 4,
            "examples": [
              "updateDoc(",
              "updateDoc(",
              "updateDoc("
            ]
          },
          {
            "pattern": "arrayUnion\\(",
            "matches": 1,
            "examples": [
              "arrayUnion("
            ]
          },
          {
            "pattern": "arrayRemove\\(",
            "matches": 1,
            "examples": [
              "arrayRemove("
            ]
          }
        ],
        "lines": [
          {
            "lineNumber": 8,
            "content": "import { db } from '@/lib/firebase';",
            "pattern": "from.*firebase"
          },
          {
            "lineNumber": 8,
            "content": "import { db } from '@/lib/firebase';",
            "pattern": "import.*firebase"
          },
          {
            "lineNumber": 8,
            "content": "import { db } from '@/lib/firebase';",
            "pattern": "@/lib/firebase"
          },
          {
            "lineNumber": 9,
            "content": "import { doc, getDoc, updateDoc, arrayUnion, arrayRemove } from 'firebase/firestore';",
            "pattern": "firebase/firestore"
          },
          {
            "lineNumber": 9,
            "content": "import { doc, getDoc, updateDoc, arrayUnion, arrayRemove } from 'firebase/firestore';",
            "pattern": "from.*firebase"
          },
          {
            "lineNumber": 9,
            "content": "import { doc, getDoc, updateDoc, arrayUnion, arrayRemove } from 'firebase/firestore';",
            "pattern": "import.*firebase"
          },
          {
            "lineNumber": 49,
            "content": "const restaurantRef = doc(db, \"restaurants\", restaurantId);",
            "pattern": "doc\\("
          },
          {
            "lineNumber": 50,
            "content": "const docSnap = await getDoc(restaurantRef);",
            "pattern": "doc\\("
          },
          {
            "lineNumber": 50,
            "content": "const docSnap = await getDoc(restaurantRef);",
            "pattern": "getDoc\\("
          },
          {
            "lineNumber": 83,
            "content": "const restaurantRef = doc(db, \"restaurants\", currentUser.uid);",
            "pattern": "doc\\("
          },
          {
            "lineNumber": 103,
            "content": "await updateDoc(restaurantRef, { menu: updatedMenuItems });",
            "pattern": "doc\\("
          },
          {
            "lineNumber": 103,
            "content": "await updateDoc(restaurantRef, { menu: updatedMenuItems });",
            "pattern": "updateDoc\\("
          },
          {
            "lineNumber": 117,
            "content": "await updateDoc(restaurantRef, { menu: arrayUnion(newItem) });",
            "pattern": "doc\\("
          },
          {
            "lineNumber": 117,
            "content": "await updateDoc(restaurantRef, { menu: arrayUnion(newItem) });",
            "pattern": "updateDoc\\("
          },
          {
            "lineNumber": 117,
            "content": "await updateDoc(restaurantRef, { menu: arrayUnion(newItem) });",
            "pattern": "arrayUnion\\("
          },
          {
            "lineNumber": 134,
            "content": "const restaurantRef = doc(db, \"restaurants\", currentUser.uid);",
            "pattern": "doc\\("
          },
          {
            "lineNumber": 139,
            "content": "await updateDoc(restaurantRef, { menu: arrayRemove(itemToDelete) });",
            "pattern": "doc\\("
          },
          {
            "lineNumber": 139,
            "content": "await updateDoc(restaurantRef, { menu: arrayRemove(itemToDelete) });",
            "pattern": "updateDoc\\("
          },
          {
            "lineNumber": 139,
            "content": "await updateDoc(restaurantRef, { menu: arrayRemove(itemToDelete) });",
            "pattern": "arrayRemove\\("
          },
          {
            "lineNumber": 153,
            "content": "const restaurantRef = doc(db, \"restaurants\", currentUser.uid);",
            "pattern": "doc\\("
          },
          {
            "lineNumber": 159,
            "content": "await updateDoc(restaurantRef, { menu: updatedMenuItems });",
            "pattern": "doc\\("
          },
          {
            "lineNumber": 159,
            "content": "await updateDoc(restaurantRef, { menu: updatedMenuItems });",
            "pattern": "updateDoc\\("
          }
        ],
        "totalLines": 324,
        "firebaseLineCount": 22
      },
      {
        "file": "src\\contexts\\favorites-context.tsx",
        "patterns": [
          {
            "pattern": "firebase/firestore",
            "matches": 1,
            "examples": [
              "firebase/firestore"
            ]
          },
          {
            "pattern": "from.*firebase",
            "matches": 2,
            "examples": [
              "from '@/lib/firebase",
              "from 'firebase"
            ]
          },
          {
            "pattern": "import.*firebase",
            "matches": 1,
            "examples": [
              "import { db } from '@/lib/firebase"
            ]
          },
          {
            "pattern": "@/lib/firebase",
            "matches": 1,
            "examples": [
              "@/lib/firebase"
            ]
          },
          {
            "pattern": "collection\\(",
            "matches": 1,
            "examples": [
              "collection("
            ]
          },
          {
            "pattern": "doc\\(",
            "matches": 4,
            "examples": [
              "doc(",
              "Doc(",
              "doc("
            ]
          },
          {
            "pattern": "getDocs\\(",
            "matches": 1,
            "examples": [
              "getDocs("
            ]
          },
          {
            "pattern": "deleteDoc\\(",
            "matches": 1,
            "examples": [
              "deleteDoc("
            ]
          },
          {
            "pattern": "setDoc\\(",
            "matches": 1,
            "examples": [
              "setDoc("
            ]
          },
          {
            "pattern": "Timestamp\\.",
            "matches": 1,
            "examples": [
              "Timestamp."
            ]
          },
          {
            "pattern": "query\\(",
            "matches": 1,
            "examples": [
              "query("
            ]
          },
          {
            "pattern": "orderBy\\(",
            "matches": 1,
            "examples": [
              "orderBy("
            ]
          }
        ],
        "lines": [
          {
            "lineNumber": 8,
            "content": "import { db } from '@/lib/firebase';",
            "pattern": "from.*firebase"
          },
          {
            "lineNumber": 8,
            "content": "import { db } from '@/lib/firebase';",
            "pattern": "import.*firebase"
          },
          {
            "lineNumber": 8,
            "content": "import { db } from '@/lib/firebase';",
            "pattern": "@/lib/firebase"
          },
          {
            "lineNumber": 18,
            "content": "} from 'firebase/firestore';",
            "pattern": "firebase/firestore"
          },
          {
            "lineNumber": 18,
            "content": "} from 'firebase/firestore';",
            "pattern": "from.*firebase"
          },
          {
            "lineNumber": 42,
            "content": "const favoritesCollectionRef = collection(db, FAVORITES_COLLECTION_NAME);",
            "pattern": "collection\\("
          },
          {
            "lineNumber": 43,
            "content": "const q = query(favoritesCollectionRef, orderBy(\"addedAt\", \"desc\"));",
            "pattern": "query\\("
          },
          {
            "lineNumber": 43,
            "content": "const q = query(favoritesCollectionRef, orderBy(\"addedAt\", \"desc\"));",
            "pattern": "orderBy\\("
          },
          {
            "lineNumber": 44,
            "content": "const querySnapshot = await getDocs(q);",
            "pattern": "getDocs\\("
          },
          {
            "lineNumber": 76,
            "content": "const favoriteDocRef = doc(db, FAVORITES_COLLECTION_NAME, favoriteId);",
            "pattern": "doc\\("
          },
          {
            "lineNumber": 81,
            "content": "addedAt: Timestamp.now(),",
            "pattern": "Timestamp\\."
          },
          {
            "lineNumber": 83,
            "content": "await setDoc(favoriteDocRef, newFavorite);",
            "pattern": "doc\\("
          },
          {
            "lineNumber": 83,
            "content": "await setDoc(favoriteDocRef, newFavorite);",
            "pattern": "setDoc\\("
          },
          {
            "lineNumber": 114,
            "content": "const favoriteDocRef = doc(db, FAVORITES_COLLECTION_NAME, favoriteId);",
            "pattern": "doc\\("
          },
          {
            "lineNumber": 115,
            "content": "await deleteDoc(favoriteDocRef);",
            "pattern": "doc\\("
          },
          {
            "lineNumber": 115,
            "content": "await deleteDoc(favoriteDocRef);",
            "pattern": "deleteDoc\\("
          }
        ],
        "totalLines": 173,
        "firebaseLineCount": 16
      },
      {
        "file": "src\\app\\admin\\dashboard\\merchants\\page.tsx",
        "patterns": [
          {
            "pattern": "firebase/firestore",
            "matches": 1,
            "examples": [
              "firebase/firestore"
            ]
          },
          {
            "pattern": "from.*firebase",
            "matches": 2,
            "examples": [
              "from \"@/lib/firebase",
              "from \"firebase"
            ]
          },
          {
            "pattern": "import.*firebase",
            "matches": 2,
            "examples": [
              "import { db } from \"@/lib/firebase",
              "import { collection, getDocs, query, orderBy as firestoreOrderBy, doc, updateDoc } from \"firebase"
            ]
          },
          {
            "pattern": "@/lib/firebase",
            "matches": 1,
            "examples": [
              "@/lib/firebase"
            ]
          },
          {
            "pattern": "collection\\(",
            "matches": 1,
            "examples": [
              "collection("
            ]
          },
          {
            "pattern": "doc\\(",
            "matches": 2,
            "examples": [
              "doc(",
              "Doc("
            ]
          },
          {
            "pattern": "getDocs\\(",
            "matches": 1,
            "examples": [
              "getDocs("
            ]
          },
          {
            "pattern": "updateDoc\\(",
            "matches": 1,
            "examples": [
              "updateDoc("
            ]
          },
          {
            "pattern": "query\\(",
            "matches": 1,
            "examples": [
              "query("
            ]
          },
          {
            "pattern": "orderBy\\(",
            "matches": 1,
            "examples": [
              "OrderBy("
            ]
          }
        ],
        "lines": [
          {
            "lineNumber": 13,
            "content": "import { db } from \"@/lib/firebase\";",
            "pattern": "from.*firebase"
          },
          {
            "lineNumber": 13,
            "content": "import { db } from \"@/lib/firebase\";",
            "pattern": "import.*firebase"
          },
          {
            "lineNumber": 13,
            "content": "import { db } from \"@/lib/firebase\";",
            "pattern": "@/lib/firebase"
          },
          {
            "lineNumber": 14,
            "content": "import { collection, getDocs, query, orderBy as firestoreOrderBy, doc, updateDoc } from \"firebase/firestore\";",
            "pattern": "firebase/firestore"
          },
          {
            "lineNumber": 14,
            "content": "import { collection, getDocs, query, orderBy as firestoreOrderBy, doc, updateDoc } from \"firebase/firestore\";",
            "pattern": "from.*firebase"
          },
          {
            "lineNumber": 14,
            "content": "import { collection, getDocs, query, orderBy as firestoreOrderBy, doc, updateDoc } from \"firebase/firestore\";",
            "pattern": "import.*firebase"
          },
          {
            "lineNumber": 61,
            "content": "const restaurantsCollectionRef = collection(db, \"restaurants\");",
            "pattern": "collection\\("
          },
          {
            "lineNumber": 62,
            "content": "const q = query(restaurantsCollectionRef, firestoreOrderBy(\"name\"));",
            "pattern": "query\\("
          },
          {
            "lineNumber": 62,
            "content": "const q = query(restaurantsCollectionRef, firestoreOrderBy(\"name\"));",
            "pattern": "orderBy\\("
          },
          {
            "lineNumber": 63,
            "content": "const querySnapshot = await getDocs(q);",
            "pattern": "getDocs\\("
          },
          {
            "lineNumber": 80,
            "content": "const restaurantRef = doc(db, \"restaurants\", restaurantId);",
            "pattern": "doc\\("
          },
          {
            "lineNumber": 81,
            "content": "await updateDoc(restaurantRef, { status: newStatus });",
            "pattern": "doc\\("
          },
          {
            "lineNumber": 81,
            "content": "await updateDoc(restaurantRef, { status: newStatus });",
            "pattern": "updateDoc\\("
          }
        ],
        "totalLines": 197,
        "firebaseLineCount": 13
      },
      {
        "file": "src\\app\\merchant\\dashboard\\promotions\\page.tsx",
        "patterns": [
          {
            "pattern": "firebase/firestore",
            "matches": 1,
            "examples": [
              "firebase/firestore"
            ]
          },
          {
            "pattern": "from.*firebase",
            "matches": 2,
            "examples": [
              "from '@/lib/firebase",
              "from 'firebase"
            ]
          },
          {
            "pattern": "import.*firebase",
            "matches": 2,
            "examples": [
              "import { db } from '@/lib/firebase",
              "import { doc, getDoc, updateDoc } from 'firebase"
            ]
          },
          {
            "pattern": "@/lib/firebase",
            "matches": 1,
            "examples": [
              "@/lib/firebase"
            ]
          },
          {
            "pattern": "doc\\(",
            "matches": 4,
            "examples": [
              "doc(",
              "Doc(",
              "doc("
            ]
          },
          {
            "pattern": "getDoc\\(",
            "matches": 1,
            "examples": [
              "getDoc("
            ]
          },
          {
            "pattern": "updateDoc\\(",
            "matches": 1,
            "examples": [
              "updateDoc("
            ]
          }
        ],
        "lines": [
          {
            "lineNumber": 8,
            "content": "import { db } from '@/lib/firebase';",
            "pattern": "from.*firebase"
          },
          {
            "lineNumber": 8,
            "content": "import { db } from '@/lib/firebase';",
            "pattern": "import.*firebase"
          },
          {
            "lineNumber": 8,
            "content": "import { db } from '@/lib/firebase';",
            "pattern": "@/lib/firebase"
          },
          {
            "lineNumber": 9,
            "content": "import { doc, getDoc, updateDoc } from 'firebase/firestore';",
            "pattern": "firebase/firestore"
          },
          {
            "lineNumber": 9,
            "content": "import { doc, getDoc, updateDoc } from 'firebase/firestore';",
            "pattern": "from.*firebase"
          },
          {
            "lineNumber": 9,
            "content": "import { doc, getDoc, updateDoc } from 'firebase/firestore';",
            "pattern": "import.*firebase"
          },
          {
            "lineNumber": 57,
            "content": "const restaurantRef = doc(db, \"restaurants\", restaurantId);",
            "pattern": "doc\\("
          },
          {
            "lineNumber": 58,
            "content": "const docSnap = await getDoc(restaurantRef);",
            "pattern": "doc\\("
          },
          {
            "lineNumber": 58,
            "content": "const docSnap = await getDoc(restaurantRef);",
            "pattern": "getDoc\\("
          },
          {
            "lineNumber": 99,
            "content": "const restaurantRef = doc(db, \"restaurants\", currentUser.uid);",
            "pattern": "doc\\("
          },
          {
            "lineNumber": 100,
            "content": "await updateDoc(restaurantRef, { promotions: promotions });",
            "pattern": "doc\\("
          },
          {
            "lineNumber": 100,
            "content": "await updateDoc(restaurantRef, { promotions: promotions });",
            "pattern": "updateDoc\\("
          }
        ],
        "totalLines": 292,
        "firebaseLineCount": 12
      },
      {
        "file": "src\\app\\merchant\\dashboard\\settings\\page.tsx",
        "patterns": [
          {
            "pattern": "firebase/firestore",
            "matches": 1,
            "examples": [
              "firebase/firestore"
            ]
          },
          {
            "pattern": "from.*firebase",
            "matches": 2,
            "examples": [
              "from '@/lib/firebase",
              "from 'firebase"
            ]
          },
          {
            "pattern": "import.*firebase",
            "matches": 2,
            "examples": [
              "import { db } from '@/lib/firebase",
              "import { doc, getDoc, updateDoc } from 'firebase"
            ]
          },
          {
            "pattern": "@/lib/firebase",
            "matches": 1,
            "examples": [
              "@/lib/firebase"
            ]
          },
          {
            "pattern": "doc\\(",
            "matches": 4,
            "examples": [
              "doc(",
              "Doc(",
              "doc("
            ]
          },
          {
            "pattern": "getDoc\\(",
            "matches": 1,
            "examples": [
              "getDoc("
            ]
          },
          {
            "pattern": "updateDoc\\(",
            "matches": 1,
            "examples": [
              "updateDoc("
            ]
          }
        ],
        "lines": [
          {
            "lineNumber": 9,
            "content": "import { db } from '@/lib/firebase';",
            "pattern": "from.*firebase"
          },
          {
            "lineNumber": 9,
            "content": "import { db } from '@/lib/firebase';",
            "pattern": "import.*firebase"
          },
          {
            "lineNumber": 9,
            "content": "import { db } from '@/lib/firebase';",
            "pattern": "@/lib/firebase"
          },
          {
            "lineNumber": 10,
            "content": "import { doc, getDoc, updateDoc } from 'firebase/firestore';",
            "pattern": "firebase/firestore"
          },
          {
            "lineNumber": 10,
            "content": "import { doc, getDoc, updateDoc } from 'firebase/firestore';",
            "pattern": "from.*firebase"
          },
          {
            "lineNumber": 10,
            "content": "import { doc, getDoc, updateDoc } from 'firebase/firestore';",
            "pattern": "import.*firebase"
          },
          {
            "lineNumber": 72,
            "content": "const restaurantRef = doc(db, \"restaurants\", currentUser.uid);",
            "pattern": "doc\\("
          },
          {
            "lineNumber": 73,
            "content": "const docSnap = await getDoc(restaurantRef);",
            "pattern": "doc\\("
          },
          {
            "lineNumber": 73,
            "content": "const docSnap = await getDoc(restaurantRef);",
            "pattern": "getDoc\\("
          },
          {
            "lineNumber": 316,
            "content": "const restaurantRef = doc(db, \"restaurants\", currentUser.uid);",
            "pattern": "doc\\("
          },
          {
            "lineNumber": 328,
            "content": "await updateDoc(restaurantRef, updatedRestaurantData);",
            "pattern": "doc\\("
          },
          {
            "lineNumber": 328,
            "content": "await updateDoc(restaurantRef, updatedRestaurantData);",
            "pattern": "updateDoc\\("
          }
        ],
        "totalLines": 586,
        "firebaseLineCount": 12
      },
      {
        "file": "src\\lib\\adapters\\test-suite.ts",
        "patterns": [
          {
            "pattern": "collection\\(",
            "matches": 7,
            "examples": [
              "Collection(",
              "collection(",
              "Collection("
            ]
          },
          {
            "pattern": "doc\\(",
            "matches": 2,
            "examples": [
              "doc(",
              "doc("
            ]
          },
          {
            "pattern": "onSnapshot\\(",
            "matches": 1,
            "examples": [
              "onSnapshot("
            ]
          },
          {
            "pattern": "orderBy\\(",
            "matches": 1,
            "examples": [
              "orderBy("
            ]
          },
          {
            "pattern": "where\\(",
            "matches": 1,
            "examples": [
              "where("
            ]
          }
        ],
        "lines": [
          {
            "lineNumber": 75,
            "content": "await this.runTest('集合创建测试', () => this.testCollection());",
            "pattern": "collection\\("
          },
          {
            "lineNumber": 89,
            "content": "const testCollection = this.db.collection('test_connection');",
            "pattern": "collection\\("
          },
          {
            "lineNumber": 90,
            "content": "const testDoc = testCollection.doc('test');",
            "pattern": "doc\\("
          },
          {
            "lineNumber": 102,
            "content": "private async testCollection(): Promise<void> {",
            "pattern": "collection\\("
          },
          {
            "lineNumber": 103,
            "content": "const collection = this.db.collection('test_collection');",
            "pattern": "collection\\("
          },
          {
            "lineNumber": 125,
            "content": "const collection = this.db.collection('test_docs');",
            "pattern": "collection\\("
          },
          {
            "lineNumber": 126,
            "content": "const docRef = collection.doc('test_doc');",
            "pattern": "doc\\("
          },
          {
            "lineNumber": 162,
            "content": "const collection = this.db.collection('test_queries');",
            "pattern": "collection\\("
          },
          {
            "lineNumber": 170,
            "content": "let query = collection.where('active', '==', true);",
            "pattern": "where\\("
          },
          {
            "lineNumber": 178,
            "content": "query = collection.orderBy('priority', 'desc').limit(2);",
            "pattern": "orderBy\\("
          },
          {
            "lineNumber": 198,
            "content": "const collection = this.db.collection('test_realtime');",
            "pattern": "collection\\("
          },
          {
            "lineNumber": 202,
            "content": "const unsubscribe = collection.onSnapshot((snapshot: any) => {",
            "pattern": "onSnapshot\\("
          }
        ],
        "totalLines": 532,
        "firebaseLineCount": 12
      },
      {
        "file": "src\\lib\\database.ts",
        "patterns": [
          {
            "pattern": "firebase/firestore",
            "matches": 1,
            "examples": [
              "firebase/firestore"
            ]
          },
          {
            "pattern": "firebase/auth",
            "matches": 1,
            "examples": [
              "firebase/auth"
            ]
          },
          {
            "pattern": "firebase/storage",
            "matches": 1,
            "examples": [
              "firebase/storage"
            ]
          },
          {
            "pattern": "firebase/app",
            "matches": 1,
            "examples": [
              "firebase/app"
            ]
          },
          {
            "pattern": "from.*firebase",
            "matches": 4,
            "examples": [
              "from \"firebase",
              "from \"firebase",
              "from \"firebase"
            ]
          },
          {
            "pattern": "import.*firebase",
            "matches": 4,
            "examples": [
              "import { initializeApp, getApps, type FirebaseApp } from \"firebase",
              "import { getFirestore, initializeFirestore, type Firestore } from \"firebase",
              "import { getAuth as getFirebaseAuth, type Auth } from \"firebase"
            ]
          }
        ],
        "lines": [
          {
            "lineNumber": 46,
            "content": "import { initializeApp, getApps, type FirebaseApp } from \"firebase/app\";",
            "pattern": "firebase/app"
          },
          {
            "lineNumber": 46,
            "content": "import { initializeApp, getApps, type FirebaseApp } from \"firebase/app\";",
            "pattern": "from.*firebase"
          },
          {
            "lineNumber": 46,
            "content": "import { initializeApp, getApps, type FirebaseApp } from \"firebase/app\";",
            "pattern": "import.*firebase"
          },
          {
            "lineNumber": 47,
            "content": "import { getFirestore, initializeFirestore, type Firestore } from \"firebase/firestore\";",
            "pattern": "firebase/firestore"
          },
          {
            "lineNumber": 47,
            "content": "import { getFirestore, initializeFirestore, type Firestore } from \"firebase/firestore\";",
            "pattern": "from.*firebase"
          },
          {
            "lineNumber": 47,
            "content": "import { getFirestore, initializeFirestore, type Firestore } from \"firebase/firestore\";",
            "pattern": "import.*firebase"
          },
          {
            "lineNumber": 48,
            "content": "import { getAuth as getFirebaseAuth, type Auth } from \"firebase/auth\";",
            "pattern": "firebase/auth"
          },
          {
            "lineNumber": 48,
            "content": "import { getAuth as getFirebaseAuth, type Auth } from \"firebase/auth\";",
            "pattern": "from.*firebase"
          },
          {
            "lineNumber": 48,
            "content": "import { getAuth as getFirebaseAuth, type Auth } from \"firebase/auth\";",
            "pattern": "import.*firebase"
          },
          {
            "lineNumber": 49,
            "content": "import { getStorage as getFirebaseStorage, type FirebaseStorage } from \"firebase/storage\";",
            "pattern": "firebase/storage"
          },
          {
            "lineNumber": 49,
            "content": "import { getStorage as getFirebaseStorage, type FirebaseStorage } from \"firebase/storage\";",
            "pattern": "from.*firebase"
          },
          {
            "lineNumber": 49,
            "content": "import { getStorage as getFirebaseStorage, type FirebaseStorage } from \"firebase/storage\";",
            "pattern": "import.*firebase"
          }
        ],
        "totalLines": 241,
        "firebaseLineCount": 12
      }
    ],
    "criticalFiles": [
      {
        "file": "src\\contexts\\order-context.tsx",
        "patterns": [
          {
            "pattern": "firebase/firestore",
            "matches": 1,
            "examples": [
              "firebase/firestore"
            ]
          },
          {
            "pattern": "from.*firebase",
            "matches": 2,
            "examples": [
              "from '@/lib/firebase",
              "from 'firebase"
            ]
          },
          {
            "pattern": "import.*firebase",
            "matches": 1,
            "examples": [
              "import { db } from '@/lib/firebase"
            ]
          },
          {
            "pattern": "@/lib/firebase",
            "matches": 1,
            "examples": [
              "@/lib/firebase"
            ]
          },
          {
            "pattern": "collection\\(",
            "matches": 3,
            "examples": [
              "collection(",
              "collection(",
              "collection("
            ]
          },
          {
            "pattern": "doc\\(",
            "matches": 6,
            "examples": [
              "Doc(",
              "Doc(",
              "doc("
            ]
          },
          {
            "pattern": "getDoc\\(",
            "matches": 1,
            "examples": [
              "getDoc("
            ]
          },
          {
            "pattern": "getDocs\\(",
            "matches": 1,
            "examples": [
              "getDocs("
            ]
          },
          {
            "pattern": "addDoc\\(",
            "matches": 1,
            "examples": [
              "addDoc("
            ]
          },
          {
            "pattern": "updateDoc\\(",
            "matches": 2,
            "examples": [
              "updateDoc(",
              "updateDoc("
            ]
          },
          {
            "pattern": "onSnapshot\\(",
            "matches": 1,
            "examples": [
              "onSnapshot("
            ]
          },
          {
            "pattern": "serverTimestamp\\(",
            "matches": 1,
            "examples": [
              "serverTimestamp("
            ]
          },
          {
            "pattern": "Timestamp\\.",
            "matches": 2,
            "examples": [
              "Timestamp.",
              "Timestamp."
            ]
          },
          {
            "pattern": "query\\(",
            "matches": 2,
            "examples": [
              "query(",
              "query("
            ]
          },
          {
            "pattern": "orderBy\\(",
            "matches": 2,
            "examples": [
              "orderBy(",
              "orderBy("
            ]
          }
        ],
        "lines": [
          {
            "lineNumber": 7,
            "content": "import { db } from '@/lib/firebase';",
            "pattern": "from.*firebase"
          },
          {
            "lineNumber": 7,
            "content": "import { db } from '@/lib/firebase';",
            "pattern": "import.*firebase"
          },
          {
            "lineNumber": 7,
            "content": "import { db } from '@/lib/firebase';",
            "pattern": "@/lib/firebase"
          },
          {
            "lineNumber": 21,
            "content": "} from 'firebase/firestore';",
            "pattern": "firebase/firestore"
          },
          {
            "lineNumber": 21,
            "content": "} from 'firebase/firestore';",
            "pattern": "from.*firebase"
          },
          {
            "lineNumber": 58,
            "content": "const ordersCollectionRef = collection(db, \"orders\");",
            "pattern": "collection\\("
          },
          {
            "lineNumber": 59,
            "content": "const q = query(ordersCollectionRef, orderBy(\"orderDate\", \"desc\"));",
            "pattern": "query\\("
          },
          {
            "lineNumber": 59,
            "content": "const q = query(ordersCollectionRef, orderBy(\"orderDate\", \"desc\"));",
            "pattern": "orderBy\\("
          },
          {
            "lineNumber": 60,
            "content": "const querySnapshot = await getDocs(q);",
            "pattern": "getDocs\\("
          },
          {
            "lineNumber": 98,
            "content": "const ordersCollectionRef = collection(db, \"orders\");",
            "pattern": "collection\\("
          },
          {
            "lineNumber": 99,
            "content": "const q = query(ordersCollectionRef, orderBy(\"orderDate\", \"desc\"));",
            "pattern": "query\\("
          },
          {
            "lineNumber": 99,
            "content": "const q = query(ordersCollectionRef, orderBy(\"orderDate\", \"desc\"));",
            "pattern": "orderBy\\("
          },
          {
            "lineNumber": 101,
            "content": "const unsubscribe = onSnapshot(q, (querySnapshot) => {",
            "pattern": "onSnapshot\\("
          },
          {
            "lineNumber": 146,
            "content": "const ordersCollectionRef = collection(db, \"orders\");",
            "pattern": "collection\\("
          },
          {
            "lineNumber": 159,
            "content": "orderDate: serverTimestamp(),",
            "pattern": "serverTimestamp\\("
          },
          {
            "lineNumber": 164,
            "content": "docDataWithTimestamp.appliedPromotion = orderData.appliedPromotion;",
            "pattern": "Timestamp\\."
          },
          {
            "lineNumber": 167,
            "content": "docDataWithTimestamp.discountAmount = orderData.discountAmount;",
            "pattern": "Timestamp\\."
          },
          {
            "lineNumber": 171,
            "content": "const docRef = await addDoc(ordersCollectionRef, docDataWithTimestamp);",
            "pattern": "doc\\("
          },
          {
            "lineNumber": 171,
            "content": "const docRef = await addDoc(ordersCollectionRef, docDataWithTimestamp);",
            "pattern": "addDoc\\("
          },
          {
            "lineNumber": 172,
            "content": "const newDocSnap = await getDoc(docRef);",
            "pattern": "doc\\("
          },
          {
            "lineNumber": 172,
            "content": "const newDocSnap = await getDoc(docRef);",
            "pattern": "getDoc\\("
          },
          {
            "lineNumber": 217,
            "content": "const orderRef = doc(db, \"orders\", orderId);",
            "pattern": "doc\\("
          },
          {
            "lineNumber": 218,
            "content": "await updateDoc(orderRef, { status });",
            "pattern": "doc\\("
          },
          {
            "lineNumber": 218,
            "content": "await updateDoc(orderRef, { status });",
            "pattern": "updateDoc\\("
          },
          {
            "lineNumber": 236,
            "content": "const orderRef = doc(db, \"orders\", orderId);",
            "pattern": "doc\\("
          },
          {
            "lineNumber": 237,
            "content": "await updateDoc(orderRef, { rating });",
            "pattern": "doc\\("
          },
          {
            "lineNumber": 237,
            "content": "await updateDoc(orderRef, { rating });",
            "pattern": "updateDoc\\("
          }
        ],
        "totalLines": 273,
        "firebaseLineCount": 27
      },
      {
        "file": "src\\contexts\\favorites-context.tsx",
        "patterns": [
          {
            "pattern": "firebase/firestore",
            "matches": 1,
            "examples": [
              "firebase/firestore"
            ]
          },
          {
            "pattern": "from.*firebase",
            "matches": 2,
            "examples": [
              "from '@/lib/firebase",
              "from 'firebase"
            ]
          },
          {
            "pattern": "import.*firebase",
            "matches": 1,
            "examples": [
              "import { db } from '@/lib/firebase"
            ]
          },
          {
            "pattern": "@/lib/firebase",
            "matches": 1,
            "examples": [
              "@/lib/firebase"
            ]
          },
          {
            "pattern": "collection\\(",
            "matches": 1,
            "examples": [
              "collection("
            ]
          },
          {
            "pattern": "doc\\(",
            "matches": 4,
            "examples": [
              "doc(",
              "Doc(",
              "doc("
            ]
          },
          {
            "pattern": "getDocs\\(",
            "matches": 1,
            "examples": [
              "getDocs("
            ]
          },
          {
            "pattern": "deleteDoc\\(",
            "matches": 1,
            "examples": [
              "deleteDoc("
            ]
          },
          {
            "pattern": "setDoc\\(",
            "matches": 1,
            "examples": [
              "setDoc("
            ]
          },
          {
            "pattern": "Timestamp\\.",
            "matches": 1,
            "examples": [
              "Timestamp."
            ]
          },
          {
            "pattern": "query\\(",
            "matches": 1,
            "examples": [
              "query("
            ]
          },
          {
            "pattern": "orderBy\\(",
            "matches": 1,
            "examples": [
              "orderBy("
            ]
          }
        ],
        "lines": [
          {
            "lineNumber": 8,
            "content": "import { db } from '@/lib/firebase';",
            "pattern": "from.*firebase"
          },
          {
            "lineNumber": 8,
            "content": "import { db } from '@/lib/firebase';",
            "pattern": "import.*firebase"
          },
          {
            "lineNumber": 8,
            "content": "import { db } from '@/lib/firebase';",
            "pattern": "@/lib/firebase"
          },
          {
            "lineNumber": 18,
            "content": "} from 'firebase/firestore';",
            "pattern": "firebase/firestore"
          },
          {
            "lineNumber": 18,
            "content": "} from 'firebase/firestore';",
            "pattern": "from.*firebase"
          },
          {
            "lineNumber": 42,
            "content": "const favoritesCollectionRef = collection(db, FAVORITES_COLLECTION_NAME);",
            "pattern": "collection\\("
          },
          {
            "lineNumber": 43,
            "content": "const q = query(favoritesCollectionRef, orderBy(\"addedAt\", \"desc\"));",
            "pattern": "query\\("
          },
          {
            "lineNumber": 43,
            "content": "const q = query(favoritesCollectionRef, orderBy(\"addedAt\", \"desc\"));",
            "pattern": "orderBy\\("
          },
          {
            "lineNumber": 44,
            "content": "const querySnapshot = await getDocs(q);",
            "pattern": "getDocs\\("
          },
          {
            "lineNumber": 76,
            "content": "const favoriteDocRef = doc(db, FAVORITES_COLLECTION_NAME, favoriteId);",
            "pattern": "doc\\("
          },
          {
            "lineNumber": 81,
            "content": "addedAt: Timestamp.now(),",
            "pattern": "Timestamp\\."
          },
          {
            "lineNumber": 83,
            "content": "await setDoc(favoriteDocRef, newFavorite);",
            "pattern": "doc\\("
          },
          {
            "lineNumber": 83,
            "content": "await setDoc(favoriteDocRef, newFavorite);",
            "pattern": "setDoc\\("
          },
          {
            "lineNumber": 114,
            "content": "const favoriteDocRef = doc(db, FAVORITES_COLLECTION_NAME, favoriteId);",
            "pattern": "doc\\("
          },
          {
            "lineNumber": 115,
            "content": "await deleteDoc(favoriteDocRef);",
            "pattern": "doc\\("
          },
          {
            "lineNumber": 115,
            "content": "await deleteDoc(favoriteDocRef);",
            "pattern": "deleteDoc\\("
          }
        ],
        "totalLines": 173,
        "firebaseLineCount": 16
      },
      {
        "file": "src\\contexts\\auth-context.tsx",
        "patterns": [
          {
            "pattern": "doc\\(",
            "matches": 1,
            "examples": [
              "Doc("
            ]
          },
          {
            "pattern": "setDoc\\(",
            "matches": 1,
            "examples": [
              "setDoc("
            ]
          }
        ],
        "lines": [
          {
            "lineNumber": 121,
            "content": "await dbAdapter.setDoc(`restaurants/${user.uid}`, newRestaurantData);",
            "pattern": "doc\\("
          },
          {
            "lineNumber": 121,
            "content": "await dbAdapter.setDoc(`restaurants/${user.uid}`, newRestaurantData);",
            "pattern": "setDoc\\("
          }
        ],
        "totalLines": 179,
        "firebaseLineCount": 2
      }
    ]
  },
  "detailedFindings": [
    {
      "file": "src\\lib\\adapters\\database-adapter.ts",
      "firebaseLineCount": 28,
      "totalLines": 507,
      "patterns": [
        {
          "pattern": "collection\\(",
          "matches": 4,
          "examples": [
            "collection(",
            "collection(",
            "collection("
          ]
        },
        {
          "pattern": "doc\\(",
          "matches": 3,
          "examples": [
            "doc(",
            "doc(",
            "doc("
          ]
        },
        {
          "pattern": "onSnapshot\\(",
          "matches": 3,
          "examples": [
            "onSnapshot(",
            "onSnapshot(",
            "onSnapshot("
          ]
        },
        {
          "pattern": "query\\(",
          "matches": 10,
          "examples": [
            "Query(",
            "Query(",
            "Query("
          ]
        },
        {
          "pattern": "orderBy\\(",
          "matches": 4,
          "examples": [
            "orderBy(",
            "orderBy(",
            "orderBy("
          ]
        },
        {
          "pattern": "where\\(",
          "matches": 4,
          "examples": [
            "where(",
            "where(",
            "where("
          ]
        }
      ],
      "exampleLines": [
        {
          "lineNumber": 205,
          "content": "where(field: string, operator: string, value: any): Query {",
          "pattern": "where\\("
        },
        {
          "lineNumber": 237,
          "content": "return new Query(this.collection, newFilter, this.sortOptions, this.limitCount, this.offsetCount);",
          "pattern": "query\\("
        },
        {
          "lineNumber": 240,
          "content": "orderBy(field: string, direction: 'asc' | 'desc' = 'asc'): Query {",
          "pattern": "orderBy\\("
        },
        {
          "lineNumber": 245,
          "content": "return new Query(this.collection, this.filter, newSortOptions, this.limitCount, this.offsetCount);",
          "pattern": "query\\("
        },
        {
          "lineNumber": 249,
          "content": "return new Query(this.collection, this.filter, this.sortOptions, limit, this.offsetCount);",
          "pattern": "query\\("
        }
      ]
    },
    {
      "file": "src\\contexts\\order-context.tsx",
      "firebaseLineCount": 27,
      "totalLines": 273,
      "patterns": [
        {
          "pattern": "firebase/firestore",
          "matches": 1,
          "examples": [
            "firebase/firestore"
          ]
        },
        {
          "pattern": "from.*firebase",
          "matches": 2,
          "examples": [
            "from '@/lib/firebase",
            "from 'firebase"
          ]
        },
        {
          "pattern": "import.*firebase",
          "matches": 1,
          "examples": [
            "import { db } from '@/lib/firebase"
          ]
        },
        {
          "pattern": "@/lib/firebase",
          "matches": 1,
          "examples": [
            "@/lib/firebase"
          ]
        },
        {
          "pattern": "collection\\(",
          "matches": 3,
          "examples": [
            "collection(",
            "collection(",
            "collection("
          ]
        },
        {
          "pattern": "doc\\(",
          "matches": 6,
          "examples": [
            "Doc(",
            "Doc(",
            "doc("
          ]
        },
        {
          "pattern": "getDoc\\(",
          "matches": 1,
          "examples": [
            "getDoc("
          ]
        },
        {
          "pattern": "getDocs\\(",
          "matches": 1,
          "examples": [
            "getDocs("
          ]
        },
        {
          "pattern": "addDoc\\(",
          "matches": 1,
          "examples": [
            "addDoc("
          ]
        },
        {
          "pattern": "updateDoc\\(",
          "matches": 2,
          "examples": [
            "updateDoc(",
            "updateDoc("
          ]
        },
        {
          "pattern": "onSnapshot\\(",
          "matches": 1,
          "examples": [
            "onSnapshot("
          ]
        },
        {
          "pattern": "serverTimestamp\\(",
          "matches": 1,
          "examples": [
            "serverTimestamp("
          ]
        },
        {
          "pattern": "Timestamp\\.",
          "matches": 2,
          "examples": [
            "Timestamp.",
            "Timestamp."
          ]
        },
        {
          "pattern": "query\\(",
          "matches": 2,
          "examples": [
            "query(",
            "query("
          ]
        },
        {
          "pattern": "orderBy\\(",
          "matches": 2,
          "examples": [
            "orderBy(",
            "orderBy("
          ]
        }
      ],
      "exampleLines": [
        {
          "lineNumber": 7,
          "content": "import { db } from '@/lib/firebase';",
          "pattern": "from.*firebase"
        },
        {
          "lineNumber": 7,
          "content": "import { db } from '@/lib/firebase';",
          "pattern": "import.*firebase"
        },
        {
          "lineNumber": 7,
          "content": "import { db } from '@/lib/firebase';",
          "pattern": "@/lib/firebase"
        },
        {
          "lineNumber": 21,
          "content": "} from 'firebase/firestore';",
          "pattern": "firebase/firestore"
        },
        {
          "lineNumber": 21,
          "content": "} from 'firebase/firestore';",
          "pattern": "from.*firebase"
        }
      ]
    },
    {
      "file": "src\\app\\admin\\dashboard\\qrcodes\\page.tsx",
      "firebaseLineCount": 25,
      "totalLines": 513,
      "patterns": [
        {
          "pattern": "firebase/firestore",
          "matches": 1,
          "examples": [
            "firebase/firestore"
          ]
        },
        {
          "pattern": "from.*firebase",
          "matches": 2,
          "examples": [
            "from \"@/lib/firebase",
            "from \"firebase"
          ]
        },
        {
          "pattern": "import.*firebase",
          "matches": 2,
          "examples": [
            "import { db } from \"@/lib/firebase",
            "import { collection, addDoc, getDocs, serverTimestamp, doc, updateDoc, query, orderBy as firestoreOrderBy, writeBatch } from \"firebase"
          ]
        },
        {
          "pattern": "@/lib/firebase",
          "matches": 1,
          "examples": [
            "@/lib/firebase"
          ]
        },
        {
          "pattern": "collection\\(",
          "matches": 3,
          "examples": [
            "collection(",
            "collection(",
            "collection("
          ]
        },
        {
          "pattern": "doc\\(",
          "matches": 6,
          "examples": [
            "doc(",
            "Doc(",
            "Doc("
          ]
        },
        {
          "pattern": "getDocs\\(",
          "matches": 1,
          "examples": [
            "getDocs("
          ]
        },
        {
          "pattern": "addDoc\\(",
          "matches": 1,
          "examples": [
            "addDoc("
          ]
        },
        {
          "pattern": "updateDoc\\(",
          "matches": 2,
          "examples": [
            "updateDoc(",
            "updateDoc("
          ]
        },
        {
          "pattern": "serverTimestamp\\(",
          "matches": 3,
          "examples": [
            "serverTimestamp(",
            "serverTimestamp(",
            "serverTimestamp("
          ]
        },
        {
          "pattern": "query\\(",
          "matches": 1,
          "examples": [
            "query("
          ]
        },
        {
          "pattern": "orderBy\\(",
          "matches": 1,
          "examples": [
            "OrderBy("
          ]
        },
        {
          "pattern": "writeBatch\\(",
          "matches": 1,
          "examples": [
            "writeBatch("
          ]
        }
      ],
      "exampleLines": [
        {
          "lineNumber": 17,
          "content": "import { db } from \"@/lib/firebase\";",
          "pattern": "from.*firebase"
        },
        {
          "lineNumber": 17,
          "content": "import { db } from \"@/lib/firebase\";",
          "pattern": "import.*firebase"
        },
        {
          "lineNumber": 17,
          "content": "import { db } from \"@/lib/firebase\";",
          "pattern": "@/lib/firebase"
        },
        {
          "lineNumber": 20,
          "content": "import { collection, addDoc, getDocs, serverTimestamp, doc, updateDoc, query, orderBy as firestoreOrderBy, writeBatch } from \"firebase/firestore\";",
          "pattern": "firebase/firestore"
        },
        {
          "lineNumber": 20,
          "content": "import { collection, addDoc, getDocs, serverTimestamp, doc, updateDoc, query, orderBy as firestoreOrderBy, writeBatch } from \"firebase/firestore\";",
          "pattern": "from.*firebase"
        }
      ]
    },
    {
      "file": "src\\app\\merchant\\dashboard\\menu\\page.tsx",
      "firebaseLineCount": 22,
      "totalLines": 324,
      "patterns": [
        {
          "pattern": "firebase/firestore",
          "matches": 1,
          "examples": [
            "firebase/firestore"
          ]
        },
        {
          "pattern": "from.*firebase",
          "matches": 2,
          "examples": [
            "from '@/lib/firebase",
            "from 'firebase"
          ]
        },
        {
          "pattern": "import.*firebase",
          "matches": 2,
          "examples": [
            "import { db } from '@/lib/firebase",
            "import { doc, getDoc, updateDoc, arrayUnion, arrayRemove } from 'firebase"
          ]
        },
        {
          "pattern": "@/lib/firebase",
          "matches": 1,
          "examples": [
            "@/lib/firebase"
          ]
        },
        {
          "pattern": "doc\\(",
          "matches": 9,
          "examples": [
            "doc(",
            "Doc(",
            "doc("
          ]
        },
        {
          "pattern": "getDoc\\(",
          "matches": 1,
          "examples": [
            "getDoc("
          ]
        },
        {
          "pattern": "updateDoc\\(",
          "matches": 4,
          "examples": [
            "updateDoc(",
            "updateDoc(",
            "updateDoc("
          ]
        },
        {
          "pattern": "arrayUnion\\(",
          "matches": 1,
          "examples": [
            "arrayUnion("
          ]
        },
        {
          "pattern": "arrayRemove\\(",
          "matches": 1,
          "examples": [
            "arrayRemove("
          ]
        }
      ],
      "exampleLines": [
        {
          "lineNumber": 8,
          "content": "import { db } from '@/lib/firebase';",
          "pattern": "from.*firebase"
        },
        {
          "lineNumber": 8,
          "content": "import { db } from '@/lib/firebase';",
          "pattern": "import.*firebase"
        },
        {
          "lineNumber": 8,
          "content": "import { db } from '@/lib/firebase';",
          "pattern": "@/lib/firebase"
        },
        {
          "lineNumber": 9,
          "content": "import { doc, getDoc, updateDoc, arrayUnion, arrayRemove } from 'firebase/firestore';",
          "pattern": "firebase/firestore"
        },
        {
          "lineNumber": 9,
          "content": "import { doc, getDoc, updateDoc, arrayUnion, arrayRemove } from 'firebase/firestore';",
          "pattern": "from.*firebase"
        }
      ]
    },
    {
      "file": "src\\contexts\\favorites-context.tsx",
      "firebaseLineCount": 16,
      "totalLines": 173,
      "patterns": [
        {
          "pattern": "firebase/firestore",
          "matches": 1,
          "examples": [
            "firebase/firestore"
          ]
        },
        {
          "pattern": "from.*firebase",
          "matches": 2,
          "examples": [
            "from '@/lib/firebase",
            "from 'firebase"
          ]
        },
        {
          "pattern": "import.*firebase",
          "matches": 1,
          "examples": [
            "import { db } from '@/lib/firebase"
          ]
        },
        {
          "pattern": "@/lib/firebase",
          "matches": 1,
          "examples": [
            "@/lib/firebase"
          ]
        },
        {
          "pattern": "collection\\(",
          "matches": 1,
          "examples": [
            "collection("
          ]
        },
        {
          "pattern": "doc\\(",
          "matches": 4,
          "examples": [
            "doc(",
            "Doc(",
            "doc("
          ]
        },
        {
          "pattern": "getDocs\\(",
          "matches": 1,
          "examples": [
            "getDocs("
          ]
        },
        {
          "pattern": "deleteDoc\\(",
          "matches": 1,
          "examples": [
            "deleteDoc("
          ]
        },
        {
          "pattern": "setDoc\\(",
          "matches": 1,
          "examples": [
            "setDoc("
          ]
        },
        {
          "pattern": "Timestamp\\.",
          "matches": 1,
          "examples": [
            "Timestamp."
          ]
        },
        {
          "pattern": "query\\(",
          "matches": 1,
          "examples": [
            "query("
          ]
        },
        {
          "pattern": "orderBy\\(",
          "matches": 1,
          "examples": [
            "orderBy("
          ]
        }
      ],
      "exampleLines": [
        {
          "lineNumber": 8,
          "content": "import { db } from '@/lib/firebase';",
          "pattern": "from.*firebase"
        },
        {
          "lineNumber": 8,
          "content": "import { db } from '@/lib/firebase';",
          "pattern": "import.*firebase"
        },
        {
          "lineNumber": 8,
          "content": "import { db } from '@/lib/firebase';",
          "pattern": "@/lib/firebase"
        },
        {
          "lineNumber": 18,
          "content": "} from 'firebase/firestore';",
          "pattern": "firebase/firestore"
        },
        {
          "lineNumber": 18,
          "content": "} from 'firebase/firestore';",
          "pattern": "from.*firebase"
        }
      ]
    },
    {
      "file": "src\\app\\admin\\dashboard\\merchants\\page.tsx",
      "firebaseLineCount": 13,
      "totalLines": 197,
      "patterns": [
        {
          "pattern": "firebase/firestore",
          "matches": 1,
          "examples": [
            "firebase/firestore"
          ]
        },
        {
          "pattern": "from.*firebase",
          "matches": 2,
          "examples": [
            "from \"@/lib/firebase",
            "from \"firebase"
          ]
        },
        {
          "pattern": "import.*firebase",
          "matches": 2,
          "examples": [
            "import { db } from \"@/lib/firebase",
            "import { collection, getDocs, query, orderBy as firestoreOrderBy, doc, updateDoc } from \"firebase"
          ]
        },
        {
          "pattern": "@/lib/firebase",
          "matches": 1,
          "examples": [
            "@/lib/firebase"
          ]
        },
        {
          "pattern": "collection\\(",
          "matches": 1,
          "examples": [
            "collection("
          ]
        },
        {
          "pattern": "doc\\(",
          "matches": 2,
          "examples": [
            "doc(",
            "Doc("
          ]
        },
        {
          "pattern": "getDocs\\(",
          "matches": 1,
          "examples": [
            "getDocs("
          ]
        },
        {
          "pattern": "updateDoc\\(",
          "matches": 1,
          "examples": [
            "updateDoc("
          ]
        },
        {
          "pattern": "query\\(",
          "matches": 1,
          "examples": [
            "query("
          ]
        },
        {
          "pattern": "orderBy\\(",
          "matches": 1,
          "examples": [
            "OrderBy("
          ]
        }
      ],
      "exampleLines": [
        {
          "lineNumber": 13,
          "content": "import { db } from \"@/lib/firebase\";",
          "pattern": "from.*firebase"
        },
        {
          "lineNumber": 13,
          "content": "import { db } from \"@/lib/firebase\";",
          "pattern": "import.*firebase"
        },
        {
          "lineNumber": 13,
          "content": "import { db } from \"@/lib/firebase\";",
          "pattern": "@/lib/firebase"
        },
        {
          "lineNumber": 14,
          "content": "import { collection, getDocs, query, orderBy as firestoreOrderBy, doc, updateDoc } from \"firebase/firestore\";",
          "pattern": "firebase/firestore"
        },
        {
          "lineNumber": 14,
          "content": "import { collection, getDocs, query, orderBy as firestoreOrderBy, doc, updateDoc } from \"firebase/firestore\";",
          "pattern": "from.*firebase"
        }
      ]
    },
    {
      "file": "src\\app\\merchant\\dashboard\\promotions\\page.tsx",
      "firebaseLineCount": 12,
      "totalLines": 292,
      "patterns": [
        {
          "pattern": "firebase/firestore",
          "matches": 1,
          "examples": [
            "firebase/firestore"
          ]
        },
        {
          "pattern": "from.*firebase",
          "matches": 2,
          "examples": [
            "from '@/lib/firebase",
            "from 'firebase"
          ]
        },
        {
          "pattern": "import.*firebase",
          "matches": 2,
          "examples": [
            "import { db } from '@/lib/firebase",
            "import { doc, getDoc, updateDoc } from 'firebase"
          ]
        },
        {
          "pattern": "@/lib/firebase",
          "matches": 1,
          "examples": [
            "@/lib/firebase"
          ]
        },
        {
          "pattern": "doc\\(",
          "matches": 4,
          "examples": [
            "doc(",
            "Doc(",
            "doc("
          ]
        },
        {
          "pattern": "getDoc\\(",
          "matches": 1,
          "examples": [
            "getDoc("
          ]
        },
        {
          "pattern": "updateDoc\\(",
          "matches": 1,
          "examples": [
            "updateDoc("
          ]
        }
      ],
      "exampleLines": [
        {
          "lineNumber": 8,
          "content": "import { db } from '@/lib/firebase';",
          "pattern": "from.*firebase"
        },
        {
          "lineNumber": 8,
          "content": "import { db } from '@/lib/firebase';",
          "pattern": "import.*firebase"
        },
        {
          "lineNumber": 8,
          "content": "import { db } from '@/lib/firebase';",
          "pattern": "@/lib/firebase"
        },
        {
          "lineNumber": 9,
          "content": "import { doc, getDoc, updateDoc } from 'firebase/firestore';",
          "pattern": "firebase/firestore"
        },
        {
          "lineNumber": 9,
          "content": "import { doc, getDoc, updateDoc } from 'firebase/firestore';",
          "pattern": "from.*firebase"
        }
      ]
    },
    {
      "file": "src\\app\\merchant\\dashboard\\settings\\page.tsx",
      "firebaseLineCount": 12,
      "totalLines": 586,
      "patterns": [
        {
          "pattern": "firebase/firestore",
          "matches": 1,
          "examples": [
            "firebase/firestore"
          ]
        },
        {
          "pattern": "from.*firebase",
          "matches": 2,
          "examples": [
            "from '@/lib/firebase",
            "from 'firebase"
          ]
        },
        {
          "pattern": "import.*firebase",
          "matches": 2,
          "examples": [
            "import { db } from '@/lib/firebase",
            "import { doc, getDoc, updateDoc } from 'firebase"
          ]
        },
        {
          "pattern": "@/lib/firebase",
          "matches": 1,
          "examples": [
            "@/lib/firebase"
          ]
        },
        {
          "pattern": "doc\\(",
          "matches": 4,
          "examples": [
            "doc(",
            "Doc(",
            "doc("
          ]
        },
        {
          "pattern": "getDoc\\(",
          "matches": 1,
          "examples": [
            "getDoc("
          ]
        },
        {
          "pattern": "updateDoc\\(",
          "matches": 1,
          "examples": [
            "updateDoc("
          ]
        }
      ],
      "exampleLines": [
        {
          "lineNumber": 9,
          "content": "import { db } from '@/lib/firebase';",
          "pattern": "from.*firebase"
        },
        {
          "lineNumber": 9,
          "content": "import { db } from '@/lib/firebase';",
          "pattern": "import.*firebase"
        },
        {
          "lineNumber": 9,
          "content": "import { db } from '@/lib/firebase';",
          "pattern": "@/lib/firebase"
        },
        {
          "lineNumber": 10,
          "content": "import { doc, getDoc, updateDoc } from 'firebase/firestore';",
          "pattern": "firebase/firestore"
        },
        {
          "lineNumber": 10,
          "content": "import { doc, getDoc, updateDoc } from 'firebase/firestore';",
          "pattern": "from.*firebase"
        }
      ]
    },
    {
      "file": "src\\lib\\adapters\\test-suite.ts",
      "firebaseLineCount": 12,
      "totalLines": 532,
      "patterns": [
        {
          "pattern": "collection\\(",
          "matches": 7,
          "examples": [
            "Collection(",
            "collection(",
            "Collection("
          ]
        },
        {
          "pattern": "doc\\(",
          "matches": 2,
          "examples": [
            "doc(",
            "doc("
          ]
        },
        {
          "pattern": "onSnapshot\\(",
          "matches": 1,
          "examples": [
            "onSnapshot("
          ]
        },
        {
          "pattern": "orderBy\\(",
          "matches": 1,
          "examples": [
            "orderBy("
          ]
        },
        {
          "pattern": "where\\(",
          "matches": 1,
          "examples": [
            "where("
          ]
        }
      ],
      "exampleLines": [
        {
          "lineNumber": 75,
          "content": "await this.runTest('集合创建测试', () => this.testCollection());",
          "pattern": "collection\\("
        },
        {
          "lineNumber": 89,
          "content": "const testCollection = this.db.collection('test_connection');",
          "pattern": "collection\\("
        },
        {
          "lineNumber": 90,
          "content": "const testDoc = testCollection.doc('test');",
          "pattern": "doc\\("
        },
        {
          "lineNumber": 102,
          "content": "private async testCollection(): Promise<void> {",
          "pattern": "collection\\("
        },
        {
          "lineNumber": 103,
          "content": "const collection = this.db.collection('test_collection');",
          "pattern": "collection\\("
        }
      ]
    },
    {
      "file": "src\\lib\\database.ts",
      "firebaseLineCount": 12,
      "totalLines": 241,
      "patterns": [
        {
          "pattern": "firebase/firestore",
          "matches": 1,
          "examples": [
            "firebase/firestore"
          ]
        },
        {
          "pattern": "firebase/auth",
          "matches": 1,
          "examples": [
            "firebase/auth"
          ]
        },
        {
          "pattern": "firebase/storage",
          "matches": 1,
          "examples": [
            "firebase/storage"
          ]
        },
        {
          "pattern": "firebase/app",
          "matches": 1,
          "examples": [
            "firebase/app"
          ]
        },
        {
          "pattern": "from.*firebase",
          "matches": 4,
          "examples": [
            "from \"firebase",
            "from \"firebase",
            "from \"firebase"
          ]
        },
        {
          "pattern": "import.*firebase",
          "matches": 4,
          "examples": [
            "import { initializeApp, getApps, type FirebaseApp } from \"firebase",
            "import { getFirestore, initializeFirestore, type Firestore } from \"firebase",
            "import { getAuth as getFirebaseAuth, type Auth } from \"firebase"
          ]
        }
      ],
      "exampleLines": [
        {
          "lineNumber": 46,
          "content": "import { initializeApp, getApps, type FirebaseApp } from \"firebase/app\";",
          "pattern": "firebase/app"
        },
        {
          "lineNumber": 46,
          "content": "import { initializeApp, getApps, type FirebaseApp } from \"firebase/app\";",
          "pattern": "from.*firebase"
        },
        {
          "lineNumber": 46,
          "content": "import { initializeApp, getApps, type FirebaseApp } from \"firebase/app\";",
          "pattern": "import.*firebase"
        },
        {
          "lineNumber": 47,
          "content": "import { getFirestore, initializeFirestore, type Firestore } from \"firebase/firestore\";",
          "pattern": "firebase/firestore"
        },
        {
          "lineNumber": 47,
          "content": "import { getFirestore, initializeFirestore, type Firestore } from \"firebase/firestore\";",
          "pattern": "from.*firebase"
        }
      ]
    },
    {
      "file": "src\\app\\restaurants\\page.tsx",
      "firebaseLineCount": 10,
      "totalLines": 173,
      "patterns": [
        {
          "pattern": "firebase/firestore",
          "matches": 1,
          "examples": [
            "firebase/firestore"
          ]
        },
        {
          "pattern": "from.*firebase",
          "matches": 2,
          "examples": [
            "from '@/lib/firebase",
            "from 'firebase"
          ]
        },
        {
          "pattern": "import.*firebase",
          "matches": 2,
          "examples": [
            "import { db } from '@/lib/firebase",
            "import { collection, getDocs, query, where } from 'firebase"
          ]
        },
        {
          "pattern": "@/lib/firebase",
          "matches": 1,
          "examples": [
            "@/lib/firebase"
          ]
        },
        {
          "pattern": "collection\\(",
          "matches": 1,
          "examples": [
            "collection("
          ]
        },
        {
          "pattern": "getDocs\\(",
          "matches": 1,
          "examples": [
            "getDocs("
          ]
        },
        {
          "pattern": "query\\(",
          "matches": 1,
          "examples": [
            "query("
          ]
        },
        {
          "pattern": "where\\(",
          "matches": 1,
          "examples": [
            "where("
          ]
        }
      ],
      "exampleLines": [
        {
          "lineNumber": 11,
          "content": "import { db } from '@/lib/firebase';",
          "pattern": "from.*firebase"
        },
        {
          "lineNumber": 11,
          "content": "import { db } from '@/lib/firebase';",
          "pattern": "import.*firebase"
        },
        {
          "lineNumber": 11,
          "content": "import { db } from '@/lib/firebase';",
          "pattern": "@/lib/firebase"
        },
        {
          "lineNumber": 12,
          "content": "import { collection, getDocs, query, where } from 'firebase/firestore'; // Added query and where",
          "pattern": "firebase/firestore"
        },
        {
          "lineNumber": 12,
          "content": "import { collection, getDocs, query, where } from 'firebase/firestore'; // Added query and where",
          "pattern": "from.*firebase"
        }
      ]
    },
    {
      "file": "src\\app\\cart\\page.tsx",
      "firebaseLineCount": 9,
      "totalLines": 181,
      "patterns": [
        {
          "pattern": "firebase/firestore",
          "matches": 1,
          "examples": [
            "firebase/firestore"
          ]
        },
        {
          "pattern": "from.*firebase",
          "matches": 2,
          "examples": [
            "from '@/lib/firebase",
            "from 'firebase"
          ]
        },
        {
          "pattern": "import.*firebase",
          "matches": 2,
          "examples": [
            "import { db } from '@/lib/firebase",
            "import { doc, getDoc } from 'firebase"
          ]
        },
        {
          "pattern": "@/lib/firebase",
          "matches": 1,
          "examples": [
            "@/lib/firebase"
          ]
        },
        {
          "pattern": "doc\\(",
          "matches": 2,
          "examples": [
            "doc(",
            "Doc("
          ]
        },
        {
          "pattern": "getDoc\\(",
          "matches": 1,
          "examples": [
            "getDoc("
          ]
        }
      ],
      "exampleLines": [
        {
          "lineNumber": 13,
          "content": "import { db } from '@/lib/firebase';",
          "pattern": "from.*firebase"
        },
        {
          "lineNumber": 13,
          "content": "import { db } from '@/lib/firebase';",
          "pattern": "import.*firebase"
        },
        {
          "lineNumber": 13,
          "content": "import { db } from '@/lib/firebase';",
          "pattern": "@/lib/firebase"
        },
        {
          "lineNumber": 14,
          "content": "import { doc, getDoc } from 'firebase/firestore';",
          "pattern": "firebase/firestore"
        },
        {
          "lineNumber": 14,
          "content": "import { doc, getDoc } from 'firebase/firestore';",
          "pattern": "from.*firebase"
        }
      ]
    },
    {
      "file": "src\\app\\checkout\\page.tsx",
      "firebaseLineCount": 9,
      "totalLines": 409,
      "patterns": [
        {
          "pattern": "firebase/firestore",
          "matches": 1,
          "examples": [
            "firebase/firestore"
          ]
        },
        {
          "pattern": "from.*firebase",
          "matches": 2,
          "examples": [
            "from '@/lib/firebase",
            "from 'firebase"
          ]
        },
        {
          "pattern": "import.*firebase",
          "matches": 2,
          "examples": [
            "import { db } from '@/lib/firebase",
            "import { doc, getDoc } from 'firebase"
          ]
        },
        {
          "pattern": "@/lib/firebase",
          "matches": 1,
          "examples": [
            "@/lib/firebase"
          ]
        },
        {
          "pattern": "doc\\(",
          "matches": 2,
          "examples": [
            "doc(",
            "Doc("
          ]
        },
        {
          "pattern": "getDoc\\(",
          "matches": 1,
          "examples": [
            "getDoc("
          ]
        }
      ],
      "exampleLines": [
        {
          "lineNumber": 18,
          "content": "import { db } from '@/lib/firebase';",
          "pattern": "from.*firebase"
        },
        {
          "lineNumber": 18,
          "content": "import { db } from '@/lib/firebase';",
          "pattern": "import.*firebase"
        },
        {
          "lineNumber": 18,
          "content": "import { db } from '@/lib/firebase';",
          "pattern": "@/lib/firebase"
        },
        {
          "lineNumber": 19,
          "content": "import { doc, getDoc } from 'firebase/firestore';",
          "pattern": "firebase/firestore"
        },
        {
          "lineNumber": 19,
          "content": "import { doc, getDoc } from 'firebase/firestore';",
          "pattern": "from.*firebase"
        }
      ]
    },
    {
      "file": "src\\app\\favorites\\page.tsx",
      "firebaseLineCount": 9,
      "totalLines": 146,
      "patterns": [
        {
          "pattern": "firebase/firestore",
          "matches": 1,
          "examples": [
            "firebase/firestore"
          ]
        },
        {
          "pattern": "from.*firebase",
          "matches": 2,
          "examples": [
            "from '@/lib/firebase",
            "from 'firebase"
          ]
        },
        {
          "pattern": "import.*firebase",
          "matches": 2,
          "examples": [
            "import { db } from '@/lib/firebase",
            "import { doc, getDoc } from 'firebase"
          ]
        },
        {
          "pattern": "@/lib/firebase",
          "matches": 1,
          "examples": [
            "@/lib/firebase"
          ]
        },
        {
          "pattern": "doc\\(",
          "matches": 2,
          "examples": [
            "doc(",
            "Doc("
          ]
        },
        {
          "pattern": "getDoc\\(",
          "matches": 1,
          "examples": [
            "getDoc("
          ]
        }
      ],
      "exampleLines": [
        {
          "lineNumber": 11,
          "content": "import { db } from '@/lib/firebase';",
          "pattern": "from.*firebase"
        },
        {
          "lineNumber": 11,
          "content": "import { db } from '@/lib/firebase';",
          "pattern": "import.*firebase"
        },
        {
          "lineNumber": 11,
          "content": "import { db } from '@/lib/firebase';",
          "pattern": "@/lib/firebase"
        },
        {
          "lineNumber": 12,
          "content": "import { doc, getDoc } from 'firebase/firestore';",
          "pattern": "firebase/firestore"
        },
        {
          "lineNumber": 12,
          "content": "import { doc, getDoc } from 'firebase/firestore';",
          "pattern": "from.*firebase"
        }
      ]
    },
    {
      "file": "src\\app\\restaurants\\[restaurantId]\\page.tsx",
      "firebaseLineCount": 9,
      "totalLines": 217,
      "patterns": [
        {
          "pattern": "firebase/firestore",
          "matches": 1,
          "examples": [
            "firebase/firestore"
          ]
        },
        {
          "pattern": "from.*firebase",
          "matches": 2,
          "examples": [
            "from '@/lib/firebase",
            "from 'firebase"
          ]
        },
        {
          "pattern": "import.*firebase",
          "matches": 2,
          "examples": [
            "import { db } from '@/lib/firebase",
            "import { doc, getDoc } from 'firebase"
          ]
        },
        {
          "pattern": "@/lib/firebase",
          "matches": 1,
          "examples": [
            "@/lib/firebase"
          ]
        },
        {
          "pattern": "doc\\(",
          "matches": 2,
          "examples": [
            "doc(",
            "Doc("
          ]
        },
        {
          "pattern": "getDoc\\(",
          "matches": 1,
          "examples": [
            "getDoc("
          ]
        }
      ],
      "exampleLines": [
        {
          "lineNumber": 16,
          "content": "import { db } from '@/lib/firebase';",
          "pattern": "from.*firebase"
        },
        {
          "lineNumber": 16,
          "content": "import { db } from '@/lib/firebase';",
          "pattern": "import.*firebase"
        },
        {
          "lineNumber": 16,
          "content": "import { db } from '@/lib/firebase';",
          "pattern": "@/lib/firebase"
        },
        {
          "lineNumber": 17,
          "content": "import { doc, getDoc } from 'firebase/firestore';",
          "pattern": "firebase/firestore"
        },
        {
          "lineNumber": 17,
          "content": "import { doc, getDoc } from 'firebase/firestore';",
          "pattern": "from.*firebase"
        }
      ]
    },
    {
      "file": "src\\lib\\adapters\\index.ts",
      "firebaseLineCount": 4,
      "totalLines": 280,
      "patterns": [
        {
          "pattern": "onSnapshot\\(",
          "matches": 4,
          "examples": [
            "onSnapshot(",
            "onSnapshot(",
            "onSnapshot("
          ]
        }
      ],
      "exampleLines": [
        {
          "lineNumber": 166,
          "content": "onSnapshot(",
          "pattern": "onSnapshot\\("
        },
        {
          "lineNumber": 172,
          "content": "return realtimeInstance.onCollectionSnapshot(",
          "pattern": "onSnapshot\\("
        },
        {
          "lineNumber": 180,
          "content": "return super.onSnapshot(onNext, onError);",
          "pattern": "onSnapshot\\("
        },
        {
          "lineNumber": 187,
          "content": "onSnapshot(",
          "pattern": "onSnapshot\\("
        }
      ]
    },
    {
      "file": "src\\lib\\adapters\\realtime-adapter.ts",
      "firebaseLineCount": 4,
      "totalLines": 414,
      "patterns": [
        {
          "pattern": "collection\\(",
          "matches": 3,
          "examples": [
            "Collection(",
            "Collection(",
            "Collection("
          ]
        },
        {
          "pattern": "onSnapshot\\(",
          "matches": 1,
          "examples": [
            "onSnapshot("
          ]
        }
      ],
      "exampleLines": [
        {
          "lineNumber": 79,
          "content": "this.subscribeToCollection(listener.config);",
          "pattern": "collection\\("
        },
        {
          "lineNumber": 225,
          "content": "subscribeToCollection(config: SubscriptionConfig): void {",
          "pattern": "collection\\("
        },
        {
          "lineNumber": 247,
          "content": "onCollectionSnapshot(",
          "pattern": "onSnapshot\\("
        },
        {
          "lineNumber": 266,
          "content": "this.subscribeToCollection(config);",
          "pattern": "collection\\("
        }
      ]
    },
    {
      "file": "src\\contexts\\auth-context.tsx",
      "firebaseLineCount": 2,
      "totalLines": 179,
      "patterns": [
        {
          "pattern": "doc\\(",
          "matches": 1,
          "examples": [
            "Doc("
          ]
        },
        {
          "pattern": "setDoc\\(",
          "matches": 1,
          "examples": [
            "setDoc("
          ]
        }
      ],
      "exampleLines": [
        {
          "lineNumber": 121,
          "content": "await dbAdapter.setDoc(`restaurants/${user.uid}`, newRestaurantData);",
          "pattern": "doc\\("
        },
        {
          "lineNumber": 121,
          "content": "await dbAdapter.setDoc(`restaurants/${user.uid}`, newRestaurantData);",
          "pattern": "setDoc\\("
        }
      ]
    }
  ]
}